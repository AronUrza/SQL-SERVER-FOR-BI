/* REPASO DE PLSQL */

------------------------------------------------------------------------
----------------------- CURSOS SQL INTERMEDIO --------------------------
------------------------------------------------------------------------

/* ------------------------------------------------------------------ */
------- FUNCIONES INTERESANTES -----------------------------------------
/* ------------------------------------------------------------------ */


-- UPPER  -> FUNCION MAYUSCULA
-- DECODE -> FUNCION CONDICIONAL SIMILAR A CASE --- DECODE(NU_DIAS_ATRASO,0,'NO VENCIDO','VENCIDO')
-- SUBSTR -> FUNCION PARA EXTRAER UN NUMERO DE CARACTARES DE UN CAMPO --- SUBSTR(TI_CLIENTE,1,6) 
-- TRUNC  -> TRUNC(SYSDATE) -- CONVIERTE LA FECHA Y HORA ACTUAL A FORMATO FECHA dd-mm-yyyy

/* ----------------------------------------- */
------------------ EJERCICIOS -----------------
/* ----------------------------------------- */

/* 1. Mostrar el listado de pr?stamos (NU_PRESTAMO) de clientes nuevos (TI_CLIENTE = 
?NUEVO?) desembolsados (FE_DESEMBOLSO) entre el 1 de sep-21 y el 3 de sep.21. 
Mostrar tambi?n, el c?digo de producto (CO_PRODUCTO) y el saldo actual en soles 
(MO_SALD_CAPI_MN), ordenando los resultados descendentemente en funci?n al saldo.*/

SELECT NU_PRESTAMO,TI_CLIENTE,FE_DESEMBOLSO,CO_PRODUCTO,MO_SALD_CAPI_MN FROM UD_EGP
WHERE TI_CLIENTE = 'NUEVO' AND (FE_DESEMBOLSO BETWEEN '01/09/2021' AND '03/09/2021')
ORDER BY MO_SALD_CAPI_MN DESC

/* 2. Indicar cuantos clientes tienen un saldo mayor a S/ 500,000. */

SELECT COUNT(DISTINCT TI_CLIENTE) FROM UD_EGP WHERE MO_SALD_CAPI_MN > 500000

/* 3. Mostrar el listado de pr?stamos de clientes con saldo entre S/ 5,000 y S/20,000 o que tenga 
8 d?as de atraso, pero que necesariamente hayan desembolsado entre el periodo 202106 y 
202107. Se necesita contar con la columna periodo (formato YYYYMM), saldos actual, 
n?mero de pr?stamo, y una columna que indique que si el tipo de cliente el ?NUEVO?, 
colocar ?NUEVO?, caso contrario colocar ?OTROS?.*/


SELECT TO_CHAR(FE_DESEMBOLSO,'YYYYMM') PERIODO_DES,NU_PRESTAMO,MO_SALD_CAPI_MN,NU_DIAS_ATRA,TI_CLIENTE,
DECODE(TI_CLIENTE,'NUEVO','NUEVO','OTROS') FLAG_CLIENTE
FROM UD_EGP WHERE 
((MO_SALD_CAPI_MN BETWEEN 5000 AND 20000)
OR NU_DIAS_ATRA = 8) 
AND (TO_CHAR(FE_DESEMBOLSO,'YYYYMM') BETWEEN '202306' AND '202307')


/* 4. Listar los pr?stamos desembolsados durante el mes de septiembre-21, indicando su n?mero 
de pr?stamo y saldo actual, adem?s agregar una columna TIPO_DOC_RESU que indique el 
tipo de documento (DE_TIPO_DOCU) del cliente, en caso tenga ?DNI? o ?R.U.C.?, colocar 
dichas palabras, caso contrario colocar la palabra ?OTROS?.*/

SELECT A.NU_PRESTAMO, A.FE_DESEMBOLSO, A.MO_SALD_CAPI_MN,
CASE WHEN B.DE_TIPO_DOCU = 'DNI' THEN 'DNI'
     WHEN B.DE_TIPO_DOCU = 'R.U.C.' THEN 'R.U.C.'
     ELSE 'OTROS' END TIPO_DOC_RESU
     FROM UD_EGP A LEFT JOIN MD_CLIENTES B ON (A.CO_CLIENTE=B.CO_CLIENTE)
     WHERE TO_CHAR(A.FE_DESEMBOLSO,'YYYYMM') = 202109
     
     
/* 5. Sobre el ejercicio anterior, agrupar los resultados de la nueva columna creada 
(TIPO_DOC_RESU), indicando la cantidad de cr?ditos, clientes distintos y saldo acumulado 
por cada grupo (?DNI?, ?R.U.C.?, ?OTROS?). */

SELECT TIPO_DOC_RESU, COUNT(TIPO_DOC_RESU) NUM_CLIENTES_T, COUNT(DISTINCT CO_CLIENTE) NUM_CLIENTES_DIS ,SUM(MO_SALD_CAPI_MN) SUM_SALDO
       FROM (SELECT A.NU_PRESTAMO,A.CO_CLIENTE, A.FE_DESEMBOLSO, A.MO_SALD_CAPI_MN,
       CASE WHEN B.DE_TIPO_DOCU = 'DNI' THEN 'DNI'
       WHEN B.DE_TIPO_DOCU = 'R.U.C.' THEN 'R.U.C.'
       ELSE 'OTROS' END TIPO_DOC_RESU
       FROM UD_EGP A LEFT JOIN MD_CLIENTES B ON (A.CO_CLIENTE=B.CO_CLIENTE)
       WHERE TO_CHAR(A.FE_DESEMBOLSO,'YYYYMM') = 202401) 
       GROUP BY TIPO_DOC_RESU



/* ------------------------------------------------------------- */
----------------------- EJERCICIOS PARTE 02 -----------------------
/* ------------------------------------------------------------- */


/*Ejercicios:
1.1. Crea una tabla llamada "MBCO_PRESTAMOS" con 7 columnas (Considerar la estructura de la HM_EGP)
a) Fecha de actualización (FE_ACT): Por defecto toma la fecha del servidor de la BD
b) Código de cliente (CO_CLIENTE)
c) Número de préstamo (NU_PRESTAMO)
d) Importe saldo (MO_SALDO)
e) Estado del préstamo (CO_ESTA_OPER)
f) Origen (CO_ORIGEN)
g) Número de cambios (NU_CAMBIO): Por defecto toma el valor de 0*/


CREATE  TABLE MBCO_PRESTAMOS_AUZ AS 
SELECT SYSDATE FE_ACT, CO_CLIENTE,NU_PRESTAMO,MO_SALD_ACTU MO_SALDO,CO_ESTA_OPER,CO_CRITERIO CO_ORIGEN,0 AS NU_CAMBIO FROM HM_EGP WHERE 1=0



/*1.2. Inserta en la tabla MBCO_PRESTAMOS el cliente 123 y el prestamo 100123
1.3. Inserta en la tabla MBCO_PRESTAMOS un registro completo (Cliente 124 y demás datos)
1.4. Inserta en la tabla MBCO_PRESTAMOS el cliente 125 (usando la tabla DUAL)
1.5. Inserta en la tabla MBCO_PRESTAMOS cinco préstamos del stock de Junio 2023 (Consultar la HM_EGP)
1.6. Inserta en la tabla MBCO_PRESTAMOS todos los préstamos del stock de Junio 2023 (retirando castigos) sin repetir los créditos ya insertados
1.7. Confirmar las transacciones*/

INSERT INTO MBCO_PRESTAMOS_AUZ (CO_CLIENTE,NU_PRESTAMO) VALUES (123,100123);
INSERT INTO MBCO_PRESTAMOS_AUZ VALUES (SYSDATE,124,100124,1000,2,2,0);
INSERT INTO MBCO_PRESTAMOS_AUZ (SELECT SYSDATE, 125, 100125, 3000, 3, 3, 0 FROM DUAL); -- NO REQUIERE EL VALUES
INSERT INTO MBCO_PRESTAMOS_AUZ (SELECT SYSDATE FE_ACT, CO_CLIENTE,NU_PRESTAMO,MO_SALD_ACTU MO_SALDO,CO_ESTA_OPER,CO_CRITERIO CO_ORIGEN,0 AS NU_CAMBIO FROM HM_EGP 
                                WHERE TO_CHAR(FE_PROCESO,'yyyymm') = 202306 AND ROWNUM <= 5);
INSERT INTO MBCO_PRESTAMOS_AUZ (SELECT SYSDATE FE_ACT, CO_CLIENTE,NU_PRESTAMO,MO_SALD_ACTU MO_SALDO,CO_ESTA_OPER,CO_CRITERIO CO_ORIGEN,0 AS NU_CAMBIO FROM HM_EGP 
                                WHERE TO_CHAR(FE_PROCESO,'yyyymm') = 202306 AND NU_PRESTAMO NOT IN (117010180,116800306,116835613,116782483,116959864));                              
COMMIT;


SELECT * FROM MBCO_PRESTAMOS_AUZ;

/*2.1. Actualizar el campo NRO_PRESTAMO para aquellos registros sin NRO_PRESTAMO, se debe sumar 100000 al codigo de cliente y este  resultado asignarse al NRO_PRESTAMO.
2.2. Actualizar los campos importe saldo y estado del prestamo para los clientes sin estado del préstamo; asignar el monto de 5000 y estado igual a 'N'
2.3. Actualizar el campo CO_ORIGEN, si el código de cliente tiene tres digitos colocar "CREADO", en caso contrario colocar "HM_EGP"
2.4. Dehacer las transacciones de 2.1 al 2.3.
2.5. Actualizar el número de cambios de cada registro en cada transacción 
2.6. Ejecutar las consultas 2.1, 2.2 y 2.3. Crear un punto de guardado en la transacción 2.3. y deshacer los cambios en el punto de guardado; luego confirmar las transacciones 2.1 y 2.2.*/


UPDATE MBCO_PRESTAMOS_AUZ
SET NU_PRESTAMO = CO_CLIENTE + 100000
WHERE NU_PRESTAMO IS NULL;

UPDATE MBCO_PRESTAMOS_AUZ
SET MO_SALDO = 5000 , CO_ESTA_OPER = 'N'
WHERE CO_ESTA_OPER IS NULL;

UPDATE MBCO_PRESTAMOS_AUZ
SET CO_ORIGEN = DECODE(LENGTH(CO_CLIENTE)=3,'CREADO','HM_EGP');

/*ALTER TABLE MBCO_PRESTAMOS_AUZ
MODIFY CO_ORIGEN VARCHAR(15);*/
 
UPDATE MBCO_PRESTAMOS_AUZ
SET CO_ORIGEN = CASE WHEN LENGTH(CO_CLIENTE) = 3 THEN 'CREADO'
                ELSE 'HM_EGP' END;


SELECT * FROM MBCO_PRESTAMOS_AUZ WHERE CO_ESTA_OPER IS NULL

/* ------------------------------------------------------------- */
----------------------- EJERCICIOS PARTE 03 -----------------------
/* ------------------------------------------------------------- */

/*
Elabora el script que cree una tabla llamada MBCO_SESION2 con la estructura siguiente:
0. Periodo
1. Código del cliente
2. Nombre del cliente
3. Número del préstamo
4. Fecha de desembolso del préstamo (conversión en formato YYYYMM)
5. Monto desembolsado (multiplicar por tipo de cambio)
6. Nombre de la agencia
7. Monto total (Suma de todos los créditos desembolsados); tipo NUMBER
8. Proporcion; tipo NUMBER
Los campos del 1 al 6 deben mantener los mismos nombres y tipos de cada fuente de datos.
*Fuente de datos --> HM_EGP, MD_CLIENTES, MD_SUCURSAL y MD_PRODUCTO_01

Luego inserta los créditos del stock de Enero 2023 exclusivamente de los clientes con tipo documento "RUC", retira los castigos.
En segundo lugar, crea una consulta que actualice el campo "Proporcion" diviendo el monto del desembolso entre el monto total.
En tercer lugar, crea una consulta que actualice el campo "Proporcion" redondeandolo a 2 decimales.
Finalmente, confirma todas las transacciones. */

--------------------------------
---- PRIMERA PARTE -------------
--------------------------------


-- CREACION DE LA TABLA

CREATE TABLE AUZ_SESION2 AS
       SELECT B.NU_PERI_MES, A.CO_CLIENTE, A.DE_CLIENTE, B.NU_PRESTAMO, TO_CHAR(B.FE_DESEMBOLSO,'YYYYMM') FE_DESEMBOLSO,
       SUM(B.MO_DESEMBOLSO*B.VL_TIPO_CAMB_OFIC) MO_DESEMBOLSO, C.DE_SUCURSAL
       FROM MD_CLIENTES A LEFT JOIN HM_EGP B ON (A.CO_CLIENTE = B.CO_CLIENTE)
                          LEFT JOIN MD_SUCURSAL C ON (B.CO_SUCURSAL = C.CO_SUCURSAL)
       WHERE B.NU_PERI_MES = TO_CHAR(B.FE_DESEMBOLSO,'YYYYMM')
       GROUP BY B.NU_PERI_MES, A.CO_CLIENTE, A.DE_CLIENTE, B.NU_PRESTAMO,TO_CHAR(B.FE_DESEMBOLSO,'YYYYMM'), C.DE_SUCURSAL;

-- INSERTAMOS DOS NUEVOS CAMPOS A LA TABLA

ALTER TABLE AUZ_SESION2
ADD (
    TOTAL_DESEMBOLSADO NUMBER,
    PROPORCION NUMBER
);    

-- AGREGAMOS DATOS CALCULADOS A LOS NUEVOS CAMPOS

UPDATE AUZ_SESION2
SET TOTAL_DESEMBOLSADO = (SELECT SUM(MO_DESEMBOLSO) FROM AUZ_SESION2),
    PROPORCION = MO_DESEMBOLSO / (SELECT SUM(MO_DESEMBOLSO) FROM AUZ_SESION2);

----------- VERIFICAMOS LOS DATOS

SELECT * FROM AUZ_SESION2

----------- RETIRAMOS LOS CASTIGOS 

UPDATE AUZ_SESION2
SET PROPORCION = ROUND(MO_DESEMBOLSO / (SELECT SUM(MO_DESEMBOLSO) FROM AUZ_SESION2),2);


